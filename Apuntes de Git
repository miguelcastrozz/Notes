git add                                       = Agrega todos los archivos al stating area, se pueden varios solo hay que separarlos por un espacio
git add .                                     = Adiciona todos los archivos (MALA PRACTICA)
git branch                                    = Muestra la rama en la que se encuentra
git commit                                    = Crear un primer punto de control de nuestro código
git config                                    = Configura el usuario
git config -h                                 = Ayuda de la configuración
git config --global                           = Configura el usuario global para que all los proyectos queden igual
git config --global user.mail                 = Configura el correo del usuario
git config --global user.name                 = Configura el nombre del usuario
git config --global core.editor "code --wait" = Configura el editor de texto
git config --global core.autocrlf input       = Configura el autocrlf
git config --global -e                        = Muestra la configuración
git config --list                             = Muestra la configuración del usuario
git config --list --show-origin               = Muestra la configuración del usuario con la ruta del archivo
git checkout -- <file>                        = Revierte los cambios del archivo
git checkout -b                               = Crea una rama y se mueve a ella
git diff                                      = Muestra los cambios/diferencias escritos que no están en la etapa de staged
git diff --staged                             = Muestra los cambios/diferencias escritos que están en la etapa de staged
git init                                      = Para inicializar un repositorio
git log                                       = Muestra el historial de commits
git log -p                                    = Muestra el historial de commits con los cambios
git log --oneline                             = Muestra el historial de commits en una sola linea
git merge                                     = Une dos ramas
pit push -u origin master                     = Sube los cambios al repositorio remoto (-u origin master = Crea la rama master en el repositorio remoto)
git remote add origin ...                     = Agrega un repositorio remoto
git reset                                     = Volvemos en el tiempo (versión + h / s)
git reset --hard [V]                          = Volvemos en el tiempo - Borra los cambios realizados
git reset --soft                              = Volvemos en el tiempo - Mantiene los cambios realizados
git restore --staged <file>                   = Deshace el git add
git restore <file>                            = Deshace los cambios realizados
git rm                                        = Elimina un archivo
git rm --cached <file>                        = Elimina un archivo del repositorio pero no del disco duro y que no lo este monitoreando
git show                                      = Muestra los cambios de un archivo
git status                                    = Ver estado de nuestros archivos
git status -s                                 = Status del repositorio en una sola linea (M Rojo: Modificado, M Verde: Modificado, A Verde: Agregado, ?? Rojo: Nuevo))
git version                                   = Muestra la versión de git

merge: 1. Mezclar dos o más ramas en una sola rama
       2. Unir dos o más ramas en una sola rama


:edit + nombre del archivo
wait: Para tomar el control cuando cerremos la terminal

Mover carpeta aprendiendo vim
code . = Abre Visual Studio Code en la carpeta actual de terminal

Untracked files: Archivos que no están siendo rastreados por git
Proyectos